version: "3"

services:
  origin-server:
    build:
      context: ./filter
      dockerfile: Dockerfile
    image: re-mlac-origin-server
    container_name: origin-server
    restart: always
    ports:
      - "8080:8080"
    environment:
      TZ: "Asia/Seoul"
    networks:
      - mlac
    depends_on:
      - mysql-db
      - virtual-firewall
      - virtual-web-server
      - virtual-web-application-server

  virtual-firewall:
    build:
      context: ./fw
      dockerfile: Dockerfile
    image: re-mlac-virtual-firewall
    container_name: virtual-firewall
    restart: always
    environment:
      TZ: "Asia/Seoul"
    networks:
      - mlac
    ports:
      - "8081:8080"
    depends_on:
      - mysql-db

  virtual-web-server:
    build:
      context: ./ws
      dockerfile: Dockerfile
    image: re-mlac-virtual-web-server
    container_name: virtual-webserver
    restart: always
    environment:
      TZ: "Asia/Seoul"
    networks:
      - mlac
    ports:
      - "8082:8080"
    depends_on:
      - mysql-db
  
  virtual-web-application-server:
    build:
      context: ./was
      dockerfile: Dockerfile
    image: re-mlac-virtual-web-application-server
    container_name: virtual-web-application-server
    restart: always
    environment:
      TZ: "Asia/Seoul"
    networks:
      - mlac
    ports:
      - "8083:8080"
    depends_on:
      - mysql-db

  input-server:
    build:
      context: ./input
      dockerfile: Dockerfile
    container_name: input-server
    ports:
      - "8000:8000"
    restart: always
    networks:
      - mlac
    volumes:
      - ../data:/app/data
    depends_on:
      - mysql-db

  mysql-db:
    image: mysql:8.0.22
    platform: linux/amd64
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: qwer1234
    ports:
      - "3306:3306"
    volumes:
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mlac

networks:
  mlac:
    driver: bridge
